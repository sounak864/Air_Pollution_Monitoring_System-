int in=A0;
int led=D8;
int count=0;
#include <ESP8266WiFi.h> // ESP8266WiFi.h library
#include<LiquidCrystal.h>
LiquidCrystal lcd(D1,D2,D3,D4,D5,D6);
#include <DHT.h> //  DHT.h library
#define DHTPIN D7
#define DHTTYPE DHT11
const char* ssid     = "Xiaomi";
const char* password = "1234567890";
const char* host = "api.thingspeak.com";
const char* writeAPIKey = "KLCDK3A7215JHXI2";
DHT dht(DHTPIN, DHTTYPE);
void setup() {
  // put your setup code here, to run once:
  lcd.begin(16,2);
  Serial.begin(115200);
  pinMode(led, OUTPUT);
  pinMode(in,INPUT);
  dht.begin();
  
  //  Connect to WiFi network
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println(".");   
  }
}

void loop() {
  // put your main code here, to run repeatedly:
  float h=dht.readHumidity();
  float t=dht.readTemperature();
  lcd.setCursor(0,1);
  count=analogRead(in);
  lcd.print("Air Pollution Rate=");
  lcd.print(count);
  lcd.print("  ");
  lcd.print("Humidity=");
  lcd.print(h);
  lcd.print("  ");
  lcd.print("Temperature=");
  lcd.print(t);
  lcd.scrollDisplayLeft();
  delay(200);
  if(t>29)
  {
    digitalWrite(led, HIGH);
    delay(100);
  }
  else{
    digitalWrite(led, LOW);
    delay(1000);
  }

  if (isnan(h) || isnan(count)) {
    return;
  }

// make TCP connections
  WiFiClient client;
  const int httpPort = 80;
  if (!client.connect(host, httpPort)) {
    return;
  }

  String url = "/update?key=";
  url+=writeAPIKey;
  url+="&field1=";
  url+=String(count);
  url+="&field2=";
  url+=String(h);
  url+="&field3=";
  url+=String(t);
  url+="\r\n";
                             Serial.print("Pollution rate: ");
                             Serial.print(count);
                             Serial.print(" Humidity: ");
                             Serial.print(h);
                             Serial.print("Temperature: ");
                             Serial.print(t);
                             Serial.println("%. Send to Thingspeak.");
  
  // Request to the server
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" + 
               "Connection: close\r\n\r\n");
}